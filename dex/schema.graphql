type PoolFactory @entity {
    id: ID!
    pairCount: Int!
    totalVolumeUSD: BigDecimal!
    totalVolumeETH: BigDecimal!
    untrackedVolumeUSD: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    totalLiquidityETH: BigDecimal!
    txCount: BigInt!
    feesUSD: BigDecimal!
}

type Pair @entity {
    id: ID!
    token0: Token!
    token1: Token!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
    totalSupply: BigDecimal!
    reserveETH: BigDecimal!
    reserveUSD: BigDecimal!
    trackedReserveETH: BigDecimal!
    token0Price: BigDecimal!
    token1Price: BigDecimal!
    volumeToken0: BigDecimal!
    volumeToken1: BigDecimal!
    volumeUSD: BigDecimal!
    untrackedVolumeUSD: BigDecimal!
    txCount: BigInt!
    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
    pairHourData: [PairHourData!] @derivedFrom(field: "pair")
    mints: [Mint!] @derivedFrom(field: "pair")
    burns: [Burn!] @derivedFrom(field: "pair")
    swaps: [Swap!] @derivedFrom(field: "pair")
    stable: Boolean!
    feesUSD: BigDecimal!
    totalAmount0Claimable: BigDecimal!
    totalAmount1Claimable: BigDecimal!
}

type Fee @entity {
    id: ID!
    pair: Pair!
    amount0Claimable: BigDecimal!
    amount1Claimable: BigDecimal!
    amountClaimableUSD: BigDecimal!
    account: Bytes!
}

type AccountPosition @entity {
    id: ID!
    pair: Pair!
    account: Bytes!
    position: BigDecimal!
}

type Token @entity {
    id: ID!
    symbol: String!
    name: String!
    decimals: BigInt!
    totalSupply: BigInt!
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    untrackedVolumeUSD: BigDecimal!
    txCount: BigInt!
    totalLiquidity: BigDecimal!
    derivedETH: BigDecimal
    derivedUSD: BigDecimal
    tokenDayData: [TokenDayData!] @derivedFrom(field: "token")
    pairDayDataBase: [PairDayData!] @derivedFrom(field: "token0")
    pairDayDataQuote: [PairDayData!] @derivedFrom(field: "token1")
    pairBase: [Pair!] @derivedFrom(field: "token0")
    pairQuote: [Pair!] @derivedFrom(field: "token1")
}

type Transaction @entity {
    id: ID! # txn hash
    block: BigInt!
    timestamp: BigInt!
    mints: [Mint!]!
    burns: [Burn!]!
    swaps: [Swap!]!
}

type Mint @entity {
    id: ID!
    transaction: Transaction!
    timestamp: BigInt! # need this to pull recent txns for specific token or pair
    pair: Pair!
    to: Bytes!
    liquidity: BigDecimal!
    sender: Bytes
    amount0: BigDecimal
    amount1: BigDecimal
    logIndex: BigInt
    amountUSD: BigDecimal
    feeTo: Bytes
    feeLiquidity: BigDecimal
}

type Burn @entity {
    id: ID!
    transaction: Transaction!
    timestamp: BigInt! # need this to pull recent txns for specific token or pair
    pair: Pair!
    liquidity: BigDecimal!
    sender: Bytes
    amount0: BigDecimal
    amount1: BigDecimal
    to: Bytes
    logIndex: BigInt
    amountUSD: BigDecimal
    needsComplete: Boolean!
    feeTo: Bytes
    feeLiquidity: BigDecimal
}

type Swap @entity {
    id: ID!
    transaction: Transaction!
    timestamp: BigInt! # need this to pull recent txns for specific token or pair
    pair: Pair!
    sender: Bytes!
    from: Bytes! # the EOA that initiated the txn
    amount0In: BigDecimal!
    amount1In: BigDecimal!
    amount0Out: BigDecimal!
    amount1Out: BigDecimal!
    to: Bytes!
    logIndex: BigInt
    amountUSD: BigDecimal!
}

type Bundle @entity {
    id: ID!
    ethPrice: BigDecimal! # price of ETH usd
}

type FactoryDayData @entity {
    id: ID!
    date: Int!
    dailyVolumeETH: BigDecimal!
    dailyVolumeUSD: BigDecimal!
    dailyVolumeUntracked: BigDecimal!
    totalVolumeETH: BigDecimal!
    totalLiquidityETH: BigDecimal!
    totalVolumeUSD: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    txCount: BigInt!
}

type PairHourData @entity {
    id: ID!
    hourStartUnix: Int!
    pair: Pair!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
    totalSupply: BigDecimal!
    reserveUSD: BigDecimal!
    hourlyVolumeToken0: BigDecimal!
    hourlyVolumeToken1: BigDecimal!
    hourlyVolumeUSD: BigDecimal!
    hourlyTxns: BigInt!
}

type PairDayData @entity {
    id: ID!
    date: Int!
    pairAddress: Bytes!
    token0: Token!
    token1: Token!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
    totalSupply: BigDecimal!
    reserveUSD: BigDecimal!
    dailyVolumeToken0: BigDecimal!
    dailyVolumeToken1: BigDecimal!
    dailyVolumeUSD: BigDecimal!
    dailyTxns: BigInt!
}

type TokenDayData @entity {
    id: ID!
    date: Int!
    token: Token!
    dailyVolumeToken: BigDecimal!
    dailyVolumeETH: BigDecimal!
    dailyVolumeUSD: BigDecimal!
    dailyTxns: BigInt!
    totalLiquidityToken: BigDecimal!
    totalLiquidityETH: BigDecimal!
    totalLiquidityUSD: BigDecimal!
    priceUSD: BigDecimal!
}
